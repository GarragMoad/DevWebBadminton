security:
    role_hierarchy:
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_CLUB]
        ROLE_ADMIN: [ROLE_CLUB]
        ROLE_CLUB: []
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
            # the order in which firewalls are defined is very important, as the
            # request will be handled by the first firewall whose pattern matches
            dev:
                pattern: ^/(_(profiler|wdt)|css|images|js)/
                security: false
            # a firewall with no pattern should be defined last because it will match all requests
            main:
                lazy: true
                # provider that you set earlier inside providers
                provider: app_user_provider

                form_login:
                    login_path: app_login
                    check_path: app_login
                    default_target_path: admin
                    enable_csrf: true  # Activer la protection CSRF
                    csrf_token_id: 'authenticate'  # Identifiant du jeton CSRF

                logout:
                    path: app_logout
                    target: /login
                # activate different ways to authenticate
                # https://symfony.com/doc/current/security.html#the-firewall

                # https://symfony.com/doc/current/security/impersonating_user.html
                # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/superadmin, roles: ROLE_SUPER_ADMIN }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/club, roles: ROLE_CLUB }

